env:
  - distro: debianjessie
    init: "/sbin/init"
    run_opts: ""
    playbook: test.yml
  - distro: ubuntutrusty
    init: "/sbin/init"
    run_opts: ""
    playbook: test.yml
  - distro: ubuntuxenial
    init: "/sbin/init"
    run_opts: ""
    playbook: test.yml

services:
  - docker

before_install:
  - docker pull jebovic/${distro}-ansible:latest

script:
  # run container
  - container_id=$(mktemp)
  - docker run --detach --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro -p 211:11211 --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} jebovic/${distro}-ansible:latest "${init}" > "${container_id}"
  # syntax checking
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook} --syntax-check
  # test role
  - docker exec "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook}
  # test role idempotence
  - idempotence=$(mktemp)
  - docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook} | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  # test role tasks
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm service memcached status
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm service memcached stop
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm service memcached start
  - echo "stats" | nc 127.0.0.1 211

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
  slack:
    secure: 0LhDNWXV5DiQJvzxHbdxH8f/EowN6pBCEI+48SsMmhBWzUx3KUadEZ6Xidf7Wnf2+P2R1nX2YWp5O1JvXN/csoLBQdoWuFCz9V0tGfYucnyZx1FOElArlZ17kOhHeQuCWFcCLxyLItaQ4LglsK6SIKY+zCgbLzwYMepVcpaMdVT5gIq20erSnJv+rJk0fdImjGbSgyuZSyTltDLOLIxLqnr9A/JBQ46v0m3Gv+kJGSHNMscj6Ec9a2lH0Px5TeuV4VMLDaalR/nMXbnbsuLSSxGRtmztDUkZJXL7fAijrNIII+1Gwi9/ZqPzXdeovyu9lCAzx+oid1BIt1s8TBFnM0VYLLB6NNWiMfvqDbzKH9OXANZzrYv8+x/Ib6CwBk7gqbU+LJ6rL11uDheCyo7zQ8PrXjj1RBpDwFglikZJeFihuEcQlE2jJUqtRfq6xNykcOnquGsQinL5h3WSh+wleG+7VxKAu9jbFUqVkyPu8bjQOwkY+wQhQIy+FEljIYCNlPQzfU0jS1KIktx74oBgz0v+/zTPvUyzqQZulRmmkBIvERGptRHHcM+jd+pRMIpKUP7cQeDaoUXlL/oT2mPd9wG37s0uhYMKq7BkzPn5xCVqoqRBwbU4DrMtT7bKYBf0umSraHNPZV3Z8xWt3RGLhIVPHYqePSr+amv1S6yoVr4=
